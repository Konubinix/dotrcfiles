#!/bin/bash

# Print help / script usage
function help()
{
  echo "usage: dotrcfiles <command>"
  echo "available commands are:"
  echo -e "\tadd <file>\n\t\tAdd a file to tracked files"
  echo -e "\t\tIt must be in your \$HOME or one of its sub-folder"
  echo -e "\tsync\n\t\tSynchronized tracked files between repository and used locations"
  echo -e "\thelp\n\t\tPrint help"
}

# Handle call with wrong command
function wrong_command()
{
  echo "dotrcfiles - unknown command: '${1}'"
  help
}

# Add a file to tracked files
function add()
{
  file=${1}
  absoluteFile="$(cd $(dirname ${1}); pwd -P)/$(basename ${1})"
  homeRelatedFile=`echo $absoluteFile | sed "s#$HOME/#./#"`

  # Check for required argument
  if [ -z file ]
  then
    echo "dotrcfiles - add - missing argument"
    help
    return
  fi

  # Check if file is in $HOME
  if [ $absoluteFile = $homeRelatedFile ]
  then
    echo "dotrcfiles - add - file is not in your \$HOME or one of its sub-folder"
    return
  fi

  # Check if file is not already tracked
  if [ -f $homeRelatedFile ]
  then
    echo "dotrcfiles - add - file is already tracked"
    return
  fi

  # All good, add the file
  echo "dotrcfiles - add - $absoluteFile"
  if [ ! -x $(dirname $homeRelatedFile) ]
  then
    mkdir -p $(dirname $homeRelatedFile)
  fi
  ln $absoluteFile $homeRelatedFile
}

# Synchronized tracked files between repository and used locations
function sync()
{
  # List tracked files
  files=`find . -type f | grep -v "\.git" | grep -v README.md`

  # Remove old files and link to the new ones
  for f in $files
  do
    echo "dotrcfiles - sync - $f"
    rm -f $HOME/$f
    if [ ! -x $(dirname $HOME/$f) ]
    then
      mkdir -p $(dirname $HOME/$f)
    fi
    ln $f $HOME/$f
  done
}

# Handle command argument
case "$1" in
  add) add $2;;
  sync) sync;;
  help) help;;
  *) wrong_command $1;;
esac

